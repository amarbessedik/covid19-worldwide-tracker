{"version":3,"sources":["components/ScrollTop/ScrollTop.module.css","images/logo.png","components/ShareButtons/ShareButtons.module.css","components/Graph/LineGraphButtons.module.css","images/north-america.jpg","images/south-america.jpg","images/africa.jpg","images/europe.jpg","images/asia.jpg","images/australia.jpg","images/cdc.jpeg","images/who.jpg","images/hhs.jpg","components/Navbar/Navbar.module.css","components/ScrollTop/ScrollTop.js","data.js","components/Navbar/Links.js","components/Navbar/SidebarMenu.js","components/Navbar/Navbar.js","components/About/About.js","components/ShareButtons/ShareButtons.js","components/Footer/Footer.js","utils.js","components/Map/Map.js","components/InfoBox/InfoBox.js","components/Stats/Stats.js","components/Table/Table.js","components/TextSlider/TextSlider.js","components/Graph/LineGraph.js","components/Graph/LineGraphButton.js","components/Graph/LineGraphButtons.js","components/Graph/Graph.js","components/Continents/options.js","components/Continents/Continent.js","components/Resources/ResourcesData.js","components/Resources/Resource.js","components/Resources/Resources.js","App.js","index.js","components/Navbar/Links.module.css","components/About/About.module.css","components/InfoBox/InfoBox.module.css","components/Continents/Continents.module.css","components/Table/Table.module.css","components/Graph/LineGraphButton.module.css","components/Resources/Resources.module.css","components/Footer/Footer.module.css","components/Navbar/SidebarMenu.module.css","components/Stats/Stats.module.css"],"names":["module","exports","ScrollTop","useState","showScroll","setShowScroll","window","addEventListener","pageYOffset","className","styles","scrollUp","onClick","scrollTo","top","behavior","style","height","display","name","id","Links","dflex","links","d_flex","flexDirection","navLinkIcons","navLink__icon","cleanUrl","history","pushState","map","link","i","onMouseLeave","list__item","key","href","SidebarMenu","sidebarVisible","updateSidebarVisibility","resetOpenSidemenu","transform","menu__container","width","innerWidth","menu__wrapper","Navbar","toggleLinks","screenBreakpoint","dropdownToggle","resetSidebarVisibility","menuOpen","setMenuOpen","setPageYOffset","useEffect","document","body","overflowY","navbar","boxShadow","navbar__content","logo","logo__content","src","alt","hamburger__menu","hamburger__container","menu__icon","dropdownTopVisible","About","app__about","about__link","target","rel","link__icon","ShareButtons","share__buttons","center","textAlign","Footer","footer","footer__list","padding","marginBottom","color","textTransform","fontSize","Date","getFullYear","sortData","data","sort","a","b","cases","buildChartData","lastDataPoint","casesType","chartData","date","newDataPoint","x","y","push","casesTypeColors","hex","border","fill","multiplier","recovered","deaths","options","legend","elements","line","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","fontColor","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","index","values","prettyPrintStat","stat","Map","countries","zoom","TileLayer","fillColor","url","attribution","country","Circle","countryInfo","lat","long","fillOpacity","Math","sqrt","Popup","backgroundImage","flag","updated","toDateString","showDataOnMap","InfoBox","active","isblue","isred","isgreen","title","total","props","Card","infoBox","CardActionArea","CardContent","infoBox__content","Typography","infoBox__title","blue","green","red","infoBox__total","Stats","setCasesType","stats","app__left__stats_wrapper","e","todayCases","todayRecovered","todayDeaths","Table","table__outer__container","fontWeight","justifyContent","alignItems","table__inner__container","table","paddingLeft","TextSlider","titles","setIndex","classToggle","setClassToggle","interval_left","setInterval","interval_right","clearInterval","length","LineGraph","location","setData","fetch","then","response","json","data_json","timeline","fetchData","_datasets","backgroundColor","borderColor","datasets","LineGraphButton","isBlue","isRed","isGreen","Button","variant","lineGraphButton","LineGraphButtons","lineGraph__buttons","Graph","graph","chart","labels","position","dataLabels","enabled","text","align","Continent","state","seriesPie","seriesLine","btnToggle","continent","series","setState","getContinentData","continent__image","this","imageUrl","continent__graphs__container","continent__graph__toggler","continent__graph__btn","continent__donut__graph","continent__line__graph","Component","infoSource","image","cdc","description","who","hhs","useStyles","makeStyles","media","Resource","classes","resource","CardMedia","gutterBottom","component","CardActions","textDecoration","size","Resources","resources__wrapper","resourcesData","entry","Tapp","setDropdownToggle","setToggleLinks","setSidebarVisible","setScreenBreakpoint","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","handleToggleLinks","handleBreakpoint","dropdown__top","transition","dropdown__bottom","getTotalsWorldwide","iso2","_id","sortedData","getCountries","onCountryChange","preventDefault","countryCode","FormControl","Select","onChange","MenuItem","africaImage","northAmericaImage","europeImage","asiaImage","southAmericaImage","australiaImage","margin","lineHeight","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21f283c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollUp\":\"ScrollTop_scrollUp__3-UC6\",\"fadeIn\":\"ScrollTop_fadeIn__3PU7g\"};","module.exports = __webpack_public_path__ + \"static/media/logo.c50dfc3b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"share__buttons\":\"ShareButtons_share__buttons__172fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineGraph__buttons\":\"LineGraphButtons_lineGraph__buttons__2Oiuc\"};","module.exports = __webpack_public_path__ + \"static/media/north-america.48d23fba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/south-america.149a2913.jpg\";","module.exports = __webpack_public_path__ + \"static/media/africa.8b522d29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/europe.5d8ab87e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/asia.a5ecd55f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/australia.8fb2fd6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cdc.2106e13a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/who.ba61b1bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hhs.7b26ec9e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__Ou5H2\",\"navbar__content\":\"Navbar_navbar__content__2tKHn\",\"logo\":\"Navbar_logo__1Vi8c\",\"logo__content\":\"Navbar_logo__content__2dUGg\",\"rotation\":\"Navbar_rotation__3wrO3\",\"links\":\"Navbar_links__3A73N\",\"hamburger__container\":\"Navbar_hamburger__container__1SPcP\",\"hamburger__menu\":\"Navbar_hamburger__menu__na46I\",\"menu__icon\":\"Navbar_menu__icon__3u7RX\",\"fadein\":\"Navbar_fadein__2c3cm\"};","import React, { useState } from \"react\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport styles from './ScrollTop.module.css'\r\n\r\nconst ScrollTop = () => {\r\n \r\n  const [showScroll, setShowScroll] = useState(false);\r\n  const checkScrollTop = () => {\r\n    if (!showScroll && window.pageYOffset > 400) {\r\n      setShowScroll(true);\r\n    } else if (showScroll && window.pageYOffset <= 400) {\r\n      setShowScroll(false);\r\n    }\r\n  };\r\n  window.addEventListener(\"scroll\", checkScrollTop);\r\n\r\n  const scrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <ExpandLessIcon\r\n      className={styles.scrollUp}\r\n      onClick={scrollTop}\r\n      style={{ height: 40, display: showScroll ? \"flex\" : \"none\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ScrollTop;\r\n","export default [\r\n  {\r\n    name: \"World Map\",\r\n    id: \"#map\",\r\n  },\r\n  {\r\n    name: \"Numbers\",\r\n    id: \"#table\",\r\n  },\r\n  {\r\n    name: \"Graph\",\r\n    id: \"#graph\",\r\n  },\r\n  {\r\n    name: \"Resources\",\r\n    id: \"#dictionary\",\r\n  },\r\n  {\r\n    name: \"About\",\r\n    id: \"#about\",\r\n  },\r\n];\r\n","import React from 'react';\r\nimport styles from './Links.module.css';\r\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\r\nimport MoreIcon from \"@material-ui/icons/More\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport MapIcon from \"@material-ui/icons/Map\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nconst Links = ({ dflex, links }) => {\r\n    const d_flex={\r\n        flexDirection: dflex\r\n    }\r\n\r\n    const navLinkIcons = [\r\n      <MapIcon className={styles.navLink__icon} />,\r\n      <TableChartIcon className={styles.navLink__icon} />,\r\n      <TimelineIcon className={styles.navLink__icon} />,\r\n      <InfoIcon className={styles.navLink__icon} />,\r\n      <MoreIcon className={styles.navLink__icon} />,\r\n    ];\r\n\r\n    const cleanUrl = () => {\r\n      window.history.pushState(\"object or string\", \"Page Title\", \"/\");\r\n    };\r\n\r\n    return (\r\n      <div className={styles.links}>\r\n        <ul style={d_flex}>\r\n          {links.map((link, i) => (\r\n            <li\r\n              onMouseLeave={cleanUrl}\r\n              className={dflex === \"column\" ? `${styles.list__item}` : null}\r\n              key={i}\r\n            >\r\n              {navLinkIcons[i]} <a href={link.id}>{link.name}</a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Links;\r\n","import React from 'react';\r\nimport Links from './Links';\r\nimport styles from './SidebarMenu.module.css';\r\nimport links from '../../data';\r\n\r\nconst SidebarMenu = ({ sidebarVisible, updateSidebarVisibility, resetOpenSidemenu }) => {\r\n  const style = {\r\n    top: \"75px\",\r\n    transform: !sidebarVisible ? \"translateX(100%)\" : \"translateX(0)\",\r\n  };\r\n\r\n  return (\r\n    <div className={styles.menu__container} style={style}>\r\n      <div onClick={()=> {updateSidebarVisibility(); resetOpenSidemenu()}}\r\n        style={{ width: window.innerWidth <= 500 ? \"100vw\" : \"60vw\" }}\r\n        className={styles.menu__wrapper}\r\n      >\r\n        <Links dflex=\"column\" links={links} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Navbar.module.css\";\r\nimport logo from \"../../images/logo.png\";\r\nimport links from \"../../data\";\r\nimport Links from \"./Links\";\r\nimport SidebarMenu from \"../../components/Navbar/SidebarMenu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst Navbar = ({ updateSidebarVisibility,toggleLinks, screenBreakpoint, dropdownToggle, sidebarVisible, resetSidebarVisibility }) => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [pageYOffset, setPageYOffset] = useState(false);\r\n\r\n  const handleClick = () =>{\r\n    setMenuOpen(!menuOpen);\r\n    updateSidebarVisibility();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (menuOpen && screenBreakpoint) {\r\n      setMenuOpen(false);\r\n      updateSidebarVisibility();\r\n    }\r\n  }, [screenBreakpoint, menuOpen, updateSidebarVisibility]);\r\n  \r\n\r\n  useEffect(()=>{\r\n    menuOpen\r\n      ? (document.body.style.overflowY = \"hidden\")\r\n      : document.body.style.overflowY = 'visible';\r\n  })\r\n\r\n  window.addEventListener('scroll', ()=>{\r\n    window.pageYOffset < 600 ? setPageYOffset(false) : setPageYOffset(true);\r\n  })\r\n\r\n  const resetOpenSidemenu = ()=>{\r\n    setMenuOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.navbar}\r\n      style={{\r\n        boxShadow: pageYOffset ? \"0 0 15px -4px #000\" : \"0 0 15px -4px #333\",\r\n      }}\r\n    >\r\n      <div className={styles.navbar__content}>\r\n        <div className={styles.logo}>\r\n          <div className={styles.logo__content}>\r\n            <img src={logo} alt=\"logo\" />\r\n            <h6> COVID19 WORLDWIDE TRACKER (SARS-COV-2)</h6>\r\n          </div>\r\n        </div>\r\n        <div className={styles.links}>\r\n          <div style={{ display: toggleLinks ? \"none\" : \"flex\" }}>\r\n            <Links dflex=\"row\" links={links} />\r\n          </div>\r\n          <div\r\n            style={{ display: toggleLinks ? \"flex\" : \"none\" }}\r\n            className={styles.hamburger__menu}\r\n          >\r\n            <div onClick={handleClick} className={styles.hamburger__container}>\r\n              {menuOpen ? (\r\n                <CloseIcon className={styles.menu__icon} />\r\n              ) : (\r\n                <MenuIcon className={styles.menu__icon} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {!screenBreakpoint && (\r\n          <SidebarMenu\r\n            sidebarVisible={sidebarVisible}\r\n            dropdownTopVisible={dropdownToggle}\r\n            updateSidebarVisibility={resetSidebarVisibility}\r\n            resetOpenSidemenu={resetOpenSidemenu}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styles from \"./About.module.css\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div id=\"about\" className={styles.app__about}>\r\n      <h2>\r\n        This data has been collected from{\" \"}\r\n        <a\r\n          className={styles.about__link}\r\n          href=\"https://www.disease.sh\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Open Disease Data <LinkIcon className={styles.link__icon} />\r\n        </a>{\" \"}\r\n        API\r\n      </h2>\r\n      <p>\r\n        This data changes rapidly and might not reflect real-time numbers since\r\n        some cases still being reported. Total counts include both confirmed and\r\n        probable cases in some locations. Probable cases are identified by\r\n        public health officials and use criteria developed by government\r\n        authorities. Some areas may not have data because they haven’t published\r\n        their data or haven’t done so recently. A couple of different data\r\n        sources:{\" \"}\r\n      </p>\r\n      <ol>\r\n        <li>\r\n          <a\r\n            className={styles.about__link}\r\n            href=\"https://github.com/CSSEGISandData/COVID-19\"\r\n          >\r\n            JOHNS HOPKINS UNIVERSITY\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            className={styles.about__link}\r\n            href=\"https://github.com/nytimes/covid-19-data\"\r\n          >\r\n            NEW YORK TIMES\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            className={styles.about__link}\r\n            href=\"https://www.worldometers.info/coronavirus/\"\r\n          >\r\n            WORLDOMETERS\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a\r\n            className={styles.about__link}\r\n            href=\"https://github.com/ActiveConclusion/COVID19_mobility\"\r\n          >\r\n            APPLE REPPORTS\r\n          </a>\r\n        </li>\r\n      </ol>\r\n\r\n      <p>\r\n        There are various sources that are tracking and aggregating coronavirus\r\n        data. They update at different times and may have different ways of\r\n        gathering data.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport styles from \"./ShareButtons.module.css\";\r\n\r\nconst ShareButtons = () => {\r\n  return (\r\n    // <!-- I got these buttons from simplesharebuttons.com -->\r\n    <div className={styles.share__buttons}>\r\n      {/* <!-- Twitter --> */}\r\n      <a\r\n        href=\"https://twitter.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img\r\n          src=\"https://simplesharebuttons.com/images/somacro/twitter.png\"\r\n          alt=\"Twitter\"\r\n        />\r\n      </a>\r\n\r\n      {/* <!-- Facebook --> */}\r\n      <a\r\n        href=\"http://www.facebook.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img\r\n          src=\"https://simplesharebuttons.com/images/somacro/facebook.png\"\r\n          alt=\"Facebook\"\r\n        />\r\n      </a>\r\n\r\n      {/* <!-- LinkedIn --> */}\r\n      <a\r\n        href=\"http://www.linkedin.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img\r\n          src=\"https://simplesharebuttons.com/images/somacro/linkedin.png\"\r\n          alt=\"LinkedIn\"\r\n        />\r\n      </a>\r\n\r\n      {/* <!-- Reddit --> */}\r\n      <a\r\n        href=\"http://reddit.com\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <img\r\n          src=\"https://simplesharebuttons.com/images/somacro/reddit.png\"\r\n          alt=\"Reddit\"\r\n        />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareButtons;\r\n","import React from \"react\";\r\nimport ShareButtons from \"../../components/ShareButtons/ShareButtons\";\r\nimport styles from \"./Footer.module.css\";\r\n\r\nconst center = {\r\n  textAlign: \"center\",\r\n};\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className={styles.footer}>\r\n      <ul className={styles.footer__list}>\r\n        <li style={center}>\r\n          <h4\r\n            style={{\r\n              padding: 0,\r\n              marginBottom: \"5px\",\r\n              color: \"#008FFB\",\r\n            }}\r\n          >\r\n            <span>COVID-19 (SARS-COV-2) WORLDWIDE TRACKER</span>{\" \"}\r\n          </h4>\r\n        </li>\r\n        <li style={center}>\r\n          <span style={{ textTransform: \"uppercase\", fontSize: \".7rem\" }}>\r\n            &copy; DESIGNED &amp; BUILT BY AMAR BESSEDIK <br /> SOFTWARE\r\n            ENGINNER (REACT DEVELOPER) BASED IN USA, SEPTEMBER 2020\r\n            {!new Date().getFullYear() === 2020\r\n              ? \" - \" + new Date().getFullYear()\r\n              : null}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n      <br />\r\n      <ul className={styles.footer__list}>\r\n        <li>\r\n          <ShareButtons />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n//Library for number formating\r\nimport numeral from \"numeral\";\r\n// Circle and Popup from leaflet\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\n//Sorting and array in ascending order\r\nexport const sortData = (data) => {\r\n  return [...data].sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\n//Build chart data extracted from API\r\nexport const buildChartData = (data, casesType = \"cases\") => {\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  if (data) {\r\n    for (let date in data[casesType]) {\r\n      if (lastDataPoint) {\r\n        const newDataPoint = {\r\n          x: date,\r\n          y: data[casesType][date] - lastDataPoint,\r\n        };\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    }\r\n  }\r\n  return chartData;\r\n};\r\n\r\nexport const buildChartData2 = (data, casesType) => {\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  if (data) {\r\n    for (let date in data[casesType]) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint;\r\n\r\n        //--------------\r\n         switch (casesType) {\r\n           case \"cases\":\r\n             newDataPoint = {\r\n               date: date,\r\n               cases: data[casesType][date] - lastDataPoint,\r\n             };\r\n             break;\r\n           case \"recovered\":\r\n             newDataPoint = {\r\n               date: date,\r\n               recovered: data[casesType][date] - lastDataPoint,\r\n             };\r\n             break;\r\n           case \"deaths\":\r\n             newDataPoint = {\r\n               date: date,\r\n               deaths: data[casesType][date] - lastDataPoint,\r\n             };\r\n             break;\r\n\r\n             default: \r\n             newDataPoint = {\r\n               x: date,\r\n               y: data[casesType][date] - lastDataPoint,\r\n             }; break;\r\n         }\r\n\r\n        //------------\r\n\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[casesType][date];\r\n    }\r\n  }\r\n  return chartData;\r\n};\r\n\r\n//color dictionary (OBJECT)\r\nexport const casesTypeColors = {\r\n  cases: {\r\n    hex: \"#062BD1\",\r\n    border: \"rgba(0,0,0,.8)\",\r\n    fill: \"#008FFB\",\r\n    multiplier: 700,\r\n  },\r\n\r\n  recovered: {\r\n    hex: \"rgb(61, 235, 191)\",\r\n    border: \"rgba(0,0,0,.8)\",\r\n    fill: \"rgba(61, 235, 191, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  deaths: {\r\n    hex: \"#FB4443\",\r\n    border: \"rgba(0,0,0,.8)\",\r\n    fill: \"rgba(251, 65, 65, 0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n};\r\n\r\n//Graph display options\r\nexport const options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    line: {\r\n      //  fill: false,\r\n    },\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0.0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    fontColor: \"#f3f2f8\",\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        //  stacked: true,\r\n      },\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callbacks: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\n//Draw circles on the map with interactive tooltips\r\nexport const showDataOnMap = (data, casesType) =>\r\n         data.map((country, i) => (\r\n           <Circle\r\n             key={i}\r\n             center={[country.countryInfo.lat, country.countryInfo.long]}\r\n             fillOpacity={0.5}\r\n             color={casesTypeColors[casesType].border}\r\n             fillColor={casesTypeColors[casesType].fill}\r\n             radius={\r\n               Math.sqrt(country[casesType]) *\r\n               casesTypeColors[casesType].multiplier\r\n             }\r\n           >\r\n             <Popup>\r\n               <div className=\"popup__container\">\r\n                 <div className=\"popup__header\">\r\n                   <div\r\n                     className=\"popup__flag\"\r\n                     style={{\r\n                       backgroundImage: `url(${country.countryInfo.flag})`,\r\n                     }}\r\n                   ></div>\r\n                   <div className=\"popup__name\">{country.country}</div>\r\n                 </div>\r\n                 <div className=\"date__updated\">\r\n                   {new Date(country.updated).toDateString()}\r\n                 </div>\r\n                 <div className=\"popup__confirmed\">\r\n                   Confirmed: {numeral(country.cases).format(0.0)}\r\n                 </div>\r\n                 <div className=\"popup__recovered\">\r\n                   Recovered: {numeral(country.recovered).format(0.0)}\r\n                 </div>\r\n                 <div className=\"popup__fatalities\">\r\n                   Fatalities: {numeral(country.deaths).format(0.0)}\r\n                 </div>\r\n               </div>\r\n             </Popup>\r\n           </Circle>\r\n         ));\r\n\r\n        \r\n\r\nexport const prettyPrintStat = (stat) => {\r\n  return stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Map as LeafletMap, TileLayer } from 'react-leaflet';\r\nimport './Map.css';\r\nimport { showDataOnMap } from '../../utils';\r\n\r\nfunction Map({ countries, center, zoom, casesType}) {\r\n    // console.log(\"countries MAP >>>\", countries);\r\n    return (\r\n      // <div className=\"map__wrapper\">\r\n        <LeafletMap center={center} zoom={zoom}>\r\n          <TileLayer\r\n            fillColor=\"red\"\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {/* Loop through countries and draw circles on the screen */}\r\n          {showDataOnMap(countries, casesType)}\r\n        </LeafletMap> \r\n      // </div>\r\n    ); \r\n}\r\n\r\nexport default Map;\r\n\r\n","import React from \"react\";\r\nimport styles from \"./InfoBox.module.css\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\n\r\nfunction InfoBox({\r\n  active,\r\n  isblue,\r\n  isred,\r\n  isgreen,\r\n  title,\r\n  cases,\r\n  total,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Card\r\n      isred={isred}\r\n      isgreen={isgreen}\r\n      onClick={props.onClick}\r\n      className={styles.infoBox} \r\n    >\r\n      <CardActionArea>\r\n        <CardContent className={styles.infoBox__content}>\r\n          {/* Title */}\r\n          <Typography className={styles.infoBox__title}>\r\n            {title}\r\n          </Typography>\r\n          {/* Number cases numeral(country.cases).format(0.0)*/} \r\n          <h2\r\n            className={`${\r\n              (isblue && styles.blue) ||\r\n              (isgreen && styles.green) || \r\n              (isred && styles.red)\r\n            }`}\r\n          >\r\n            {cases}\r\n          </h2>\r\n          {/* Total of cases */}\r\n          <Typography className={styles.infoBox__total} color=\"textSecondary\">\r\n            {total} Total\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from 'react';\r\nimport InfoBox from '../InfoBox/InfoBox';\r\nimport styles from './Stats.module.css';\r\nimport {prettyPrintStat} from '../../utils';\r\n\r\nconst Stats = ({ casesType, setCasesType, countryInfo }) => {\r\n  return (\r\n    <div className={styles.stats}>\r\n      <div className={styles.app__left__stats_wrapper}>\r\n        <InfoBox\r\n          active={casesType === \"cases\"}\r\n          isblue={true}\r\n          onClick={(e) => setCasesType(\"cases\")}\r\n          title=\"Infected\"\r\n          cases={prettyPrintStat(countryInfo.todayCases)}\r\n          total={prettyPrintStat(countryInfo.cases)}\r\n        />\r\n        <InfoBox\r\n          active={casesType === \"recovered\"}\r\n          isgreen={true}\r\n          onClick={(e) => setCasesType(\"recovered\")}\r\n          title=\"Recovered\"\r\n          cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n          total={prettyPrintStat(countryInfo.recovered)}\r\n        />\r\n        <InfoBox\r\n          active={casesType === \"deaths\"}\r\n          isred={true}\r\n          onClick={(e) => setCasesType(\"deaths\")}\r\n          title=\"Fatalities\"\r\n          cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n          total={prettyPrintStat(countryInfo.deaths)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport styles from \"./Table.module.css\";\r\nimport numeral from \"numeral\";\r\nimport TrendingDownIcon from \"@material-ui/icons/TrendingDown\";\r\n\r\nfunction Table({ countries }) {\r\n  // console.log('countries from TABLE >>>>', countries);\r\n  return (\r\n    <div id=\"table\" className={styles.table__outer__container}>\r\n      <div id=\"_table\" className=\"app__table__header\">\r\n        <h3\r\n          style={{\r\n            textTransform: \"uppercase\",\r\n            color: \"#777\",\r\n            fontWeight: \"400\",\r\n          }}\r\n        >\r\n          Live from all countries\r\n        </h3>\r\n        <span\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            textTransform: \"capitalize\",\r\n            color: \"#888\",\r\n          }}\r\n        >\r\n          [ Numbers <TrendingDownIcon /> ]\r\n        </span>\r\n      </div>\r\n      <div className={styles.table__inner__container}>\r\n        <div className={styles.table}>\r\n          <table>\r\n            <tr style={{ paddingLeft: \"5px\" }}>\r\n              <th>COUNTRY</th>\r\n              <th>ACTIVE</th>\r\n              <th>FATALITIES</th>\r\n              <th>RECOVERED</th>\r\n              <th>TOTAL CASES</th>\r\n            </tr>\r\n\r\n            {countries.map(\r\n              ({\r\n                country,\r\n                cases,\r\n                active,\r\n                deaths,\r\n                recovered,\r\n                countryInfo: { flag },\r\n              }) => {\r\n                return (\r\n                  <tr key={country}>\r\n                    <td className={styles.flag}>\r\n                      {\" \"}\r\n                      <img src={flag} alt=\"flag\" /> <span>{country}</span>\r\n                    </td>\r\n                    <td>{numeral(active).format(0.0)}</td>\r\n                    <td>{numeral(deaths).format(0.0)}</td>\r\n                    <td>{numeral(recovered).format(0.0)}</td>\r\n                    <td>\r\n                      <strong>{numeral(cases).format(0.0)}</strong>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              }\r\n            )}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./TextSlider.css\";\r\n\r\nconst TextSlider = () => {\r\n  const titles = [\r\n    \"COVID19 WORLDWIDE TRACKER (SARS-COV-2)\",\r\n    \"BE SURE TO FOLLOW SCIENCE AND BE WELL INFORMED!\",\r\n    \"WASH HANDS, WEAR A MASK & PRACTICE SOCIAL DISTANCING\",\r\n  ];\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const [classToggle, setClassToggle] = useState(\"slide-right\");\r\n\r\n  useEffect(() => {\r\n    const interval_left = setInterval(() => {\r\n      setClassToggle(\"slide-left\");\r\n    }, 10000);\r\n    const interval_right = setInterval(() => {\r\n      setClassToggle(\"slide-right\");\r\n      if (index > 2) {\r\n        setIndex(0);\r\n      } else {\r\n        setIndex(index + 1);\r\n      }\r\n    }, 12000);\r\n    return () => {\r\n      clearInterval(interval_left);\r\n      clearInterval(interval_right);\r\n    };\r\n  }, [index]);\r\n\r\n  return (\r\n    <div className={`main ${classToggle}`}>\r\n      <p>\r\n        {index < titles.length\r\n          ? titles[index]\r\n          : \"STAY SAFE - STAY HEALTHY - BE WELL\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextSlider;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { buildChartData, options, casesTypeColors } from \"../../utils\";\r\n\r\nfunction LineGraph({ \r\n  height = 320,\r\n  width = 360,\r\n  location = \"all\",\r\n  casesType,\r\n}) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\r\n        `https://disease.sh/v3/covid-19/historical/${location}?lastdays=180`\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data_json) => {\r\n          const chartData = data_json.timeline\r\n            ? buildChartData(data_json.timeline, casesType)\r\n            : buildChartData(data_json, casesType);\r\n          setData(chartData);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [casesType, location]);\r\n\r\n  const _datasets = [\r\n    {\r\n      data: data,\r\n      backgroundColor: `${casesTypeColors[casesType].fill}`,\r\n      borderColor: `${casesTypeColors[casesType].border}`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div id='graph'>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          width={width}\r\n          height={height}\r\n          options={options}\r\n          data={{\r\n            datasets: _datasets,\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport styles from \"./LineGraphButton.module.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction LineGraphButton({\r\n  color,\r\n  active,\r\n  isBlue,\r\n  isRed,\r\n  isGreen,\r\n  title,\r\n  cases,\r\n  total,\r\n  ...props\r\n}) {\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      color=\"default\"\r\n      isRed={isRed}\r\n      isGreen={isGreen}\r\n      isBlue={isBlue}\r\n      onClick={props.onClick}\r\n      className={` ${styles.lineGraphButton}\r\n                   ${\r\n                     active &&\r\n                     ((isBlue && styles.blue) ||\r\n                       (isGreen && styles.green) ||\r\n                       (isRed && styles.red))\r\n                   }`}\r\n    >\r\n      <span style={{fontSize: '12px'}}>{title}</span>\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default LineGraphButton;\r\n","import React from \"react\";\r\nimport { prettyPrintStat } from \"../../utils\";\r\nimport LineGraphButton from \"./LineGraphButton\";\r\nimport styles from \"./LineGraphButtons.module.css\";\r\n\r\nfunction LineGraphButtons({\r\n  countryInfo: {\r\n    todayCases,\r\n    cases,\r\n    todayRecovered,\r\n    recovered,\r\n    todayDeaths,\r\n    deaths,\r\n  },\r\n  casesType,\r\n  setCasesType,\r\n}) {\r\n\r\n  return (\r\n    <div className={styles.lineGraph__buttons}>\r\n      <LineGraphButton\r\n        color=\"blue\"\r\n        active={casesType === \"cases\"}\r\n        isBlue={true}\r\n        onClick={(e) => setCasesType(\"cases\")}\r\n        title=\"INFECTED\"\r\n        cases={prettyPrintStat(todayCases)}\r\n        total={prettyPrintStat(cases)}\r\n      />\r\n      <span></span>\r\n      <LineGraphButton\r\n        color=\"green\"\r\n        active={casesType === \"recovered\"}\r\n        isGreen={true}\r\n        onClick={(e) => setCasesType(\"recovered\")}\r\n        title=\"RECOVERED\"\r\n        cases={prettyPrintStat(todayRecovered)}\r\n        total={prettyPrintStat(recovered)}\r\n      />\r\n      <span></span>\r\n      <LineGraphButton\r\n        color=\"red\"\r\n        active={casesType === \"deaths\"}\r\n        isRed={true}\r\n        onClick={(e) => setCasesType(\"deaths\")}\r\n        title=\"FATALITIES\"\r\n        cases={prettyPrintStat(todayDeaths)}\r\n        total={prettyPrintStat(deaths)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraphButtons;\r\n","import React from 'react';\r\nimport styles from './Graph.module.css';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport LineGraph from './LineGraph';\r\nimport LineGraphButtons from './LineGraphButtons';\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\n\r\nconst Graph = ({ casesType, setCasesType, countryInfo, country }) => {\r\n  return (\r\n    <div className={styles.graph}>\r\n      <Card>\r\n        <CardContent>\r\n          <h3\r\n            style={{\r\n              textTransform: \"uppercase\",\r\n              color: \"#777\",\r\n              fontWeight: \"400\",\r\n            }}\r\n            className=\"app__graph\"\r\n          >\r\n            {casesType} WORLDWIDE\r\n          </h3>\r\n          <span\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              textTransform: \"capitalize\",\r\n              color: \"#777\",\r\n            }}\r\n          >\r\n            [ Numbers <TrendingUpIcon /> ]\r\n          </span>\r\n          <LineGraphButtons\r\n            countryInfo={countryInfo}\r\n            setCasesType={setCasesType}\r\n            casesType={casesType}\r\n          />\r\n          {country === \"worldwide\" ? (\r\n            <LineGraph casesType={casesType} />\r\n          ) : (\r\n            <LineGraph casesType={casesType} location={country} />\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","export default {\r\n  chart: {},\r\n  labels: [\"Infected\", \"Recovered\", \"Active\", \"Fatalities\"],\r\n  legend: {\r\n    position: \"bottom\",\r\n    fontSize: \"10px\",\r\n  },\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  title: {\r\n    text: \"\",\r\n    align: \"center\",\r\n    style: {\r\n      fontSize: \"12px\",\r\n      fontWeight: '400',\r\n      color: \"#999\",\r\n      textTransform: \"uppercase\",\r\n    },\r\n  },\r\n};","import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport styles from \"./Continents.module.css\";\r\nimport options from \"./options\";\r\n\r\nclass Continent extends Component {\r\n  state = {\r\n    seriesPie: [],\r\n    seriesLine: [],\r\n    options: options,\r\n    btnToggle: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const getContinentData = async () => {\r\n      const { continent, title } = this.props;  \r\n      await fetch(`https://disease.sh/v3/covid-19/continents/${continent}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const series = [data.cases, data.recovered, data.active, data.deaths];\r\n          this.setState({ seriesPie: series });\r\n          this.setState({ seriesLine: [{ name: \"SARS-COV-2\", data: series }] });\r\n          this.setState({\r\n            options: {\r\n              ...options,\r\n              title: {\r\n                text: `${title}`,\r\n              },\r\n            },\r\n          });\r\n        });\r\n    };\r\n    getContinentData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.continent}>\r\n        <div className={styles.continent__image}>\r\n          <img src={this.props.imageUrl} alt=\"\" />\r\n        </div>\r\n        <div className={styles.continent__graphs__container}>\r\n          <div className={styles.continent__graph__toggler}>\r\n            <button\r\n              onClick={() =>\r\n                this.setState({ btnToggle: !this.state.btnToggle })\r\n              }\r\n              className={styles.continent__graph__btn}\r\n              type=\"button\"\r\n            >\r\n              {!this.state.btnToggle ? \"BARS VIEW\" : \"BACK\"}\r\n            </button>\r\n          </div>\r\n          <div\r\n            style={{ display: !this.state.btnToggle ? \"block\" : \"none\" }}\r\n            className={styles.continent__donut__graph}\r\n          >\r\n            <ReactApexChart\r\n              options={this.state.options}\r\n              series={this.state.seriesPie}\r\n              type=\"donut\"\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n          <div\r\n            style={{ display: this.state.btnToggle ? \"block\" : \"none\" }}\r\n            className={styles.continent__line__graph}\r\n          >\r\n            <ReactApexChart\r\n              options={this.state.options}\r\n              series={this.state.seriesLine}\r\n              type=\"bar\"\r\n              width=\"100%\"\r\n              height=\"280\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Continent;\r\n","import cdc from '../../images/cdc.jpeg';\r\nimport who from '../../images/who.jpg';\r\nimport hhs from '../../images/hhs.jpg';\r\n\r\nexport default [\r\n  {\r\n    title: \"Centers for Disease Control and Prevention\",\r\n    infoSource: \"US CDC\",\r\n    image: `${cdc}`,\r\n    description:\r\n      \"The Centers for Disease Control and Prevention is a national public health institute in the United States. It is a United States federal agency, under the Department of Health and Human Services.\",\r\n    url: \"https://www.cdc.gov/\",\r\n  },\r\n  {\r\n    title: \"World Health Organization\",\r\n    infoSource: \"WHO\",\r\n    image: `${who}`,\r\n    description: `The World Health Organization is a specialized agency of the United Nations responsible for international public health. The WHO Constitution, which establishes the agency's governing structure and principles, states its main objective as \"the attainment by all peoples of the highest possible level of health.\"`,\r\n    url: \"https://www.who.int/health-topics/coronavirus\",\r\n  },\r\n  {\r\n    title: \"U.S. Department of Health & Human Services\",\r\n    infoSource: \"US HHS\",\r\n    image: `${hhs}`,\r\n    description:\r\n      \"The United States Department of Health & Human Services, also known as the Health Department, is a cabinet-level executive branch department of the U.S. federal government with the goal of protecting the health of all Americans and providing essential human services.\",\r\n    url: \"https://www.hhs.gov/\",\r\n  },\r\n];","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from './Resources.module.css';\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst Resource = ({title, infoSource, image, description, url}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={styles.resource}>\r\n      <CardActionArea>\r\n        <CardMedia className={classes.media} image={image} title={title} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {infoSource}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <a\r\n          href={url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Button size=\"small\" color=\"primary\">\r\n            Learn More\r\n          </Button>\r\n        </a>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Resource;\r\n\r\n","import React from 'react';\r\nimport resourcesData from './ResourcesData';\r\nimport styles from './Resources.module.css';\r\nimport Resource from './Resource';\r\n\r\nconst Resources = () => {\r\n    return (\r\n        <div className={styles.resources__wrapper}>\r\n            {resourcesData.map(entry =>{\r\n              return <Resource {...entry}/>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resources;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport ScrollTop from \"./components/ScrollTop/ScrollTop\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport About from \"./components/About/About\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport { sortData } from \"./utils\";\r\nimport Map from \"./components/Map/Map\";\r\nimport Stats from \"./components/Stats/Stats\";\r\nimport Table from \"./components/Table/Table\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport TextSlider from \"./components/TextSlider/TextSlider\";\r\nimport Graph from \"./components/Graph/Graph\";\r\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\r\nimport Continent from \"./components/Continents/Continent\";\r\nimport northAmericaImage from \"../src/images/north-america.jpg\";\r\nimport southAmericaImage from \"../src/images/south-america.jpg\";\r\nimport africaImage from \"../src/images/africa.jpg\";\r\nimport europeImage from \"../src/images/europe.jpg\";\r\nimport asiaImage from \"../src/images/asia.jpg\";\r\nimport australiaImage from \"../src/images/australia.jpg\";\r\nimport Resources from \"./components/Resources/Resources\";\r\n\r\nconst Tapp = () => {\r\n  const [dropdownToggle, setDropdownToggle] = useState(false);\r\n  const [toggleLinks, setToggleLinks] = useState(false);\r\n  const [sidebarVisible, setSidebarVisible] = useState(false);\r\n  const [screenBreakpoint, setScreenBreakpoint] = useState(false);\r\n  //local state about countries\r\n  const [countries, setCountries] = useState([]);\r\n  //Track which country is selected\r\n  const [country, setCountry] = useState(\"worldwide\");\r\n  //Country info\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  //Table data\r\n  const [tableData, setTableData] = useState([]);\r\n  //Map center\r\n  const [mapCenter, setMapCenter] = useState({\r\n    lat: 25.82746,\r\n    lng: -5.4796,\r\n  });\r\n  const [mapZoom, setMapZoom] = useState(2);\r\n  //map countries\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  //cases types -> {cases, recovered, deaths}\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n\r\n  const handleToggleLinks = () => {\r\n    window.innerWidth <= 768 ? setToggleLinks(true) : setToggleLinks(false);\r\n  };\r\n\r\n  const handleBreakpoint = () => {\r\n    window.innerWidth > 768\r\n      ? setScreenBreakpoint(true)\r\n      : setScreenBreakpoint(false);\r\n  };\r\n\r\n  const updateSidebarVisibility = () => {\r\n    setSidebarVisible(!sidebarVisible);\r\n  };\r\n\r\n  const resetSidebarVisibility = () => {\r\n    setSidebarVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (!dropdownToggle && window.pageYOffset > 315) {\r\n        setDropdownToggle(true);\r\n      } else if (dropdownToggle && window.pageYOffset <= 315) {\r\n        setDropdownToggle(false);\r\n      }\r\n    });\r\n    window.addEventListener(\"load\", handleToggleLinks);\r\n    window.addEventListener(\"resize\", handleToggleLinks);\r\n    window.addEventListener(\"load\", handleBreakpoint);\r\n    window.addEventListener(\"resize\", handleBreakpoint);\r\n  });\r\n\r\n  const dropdown__top = {\r\n    display: dropdownToggle ? \"flex\" : \"none\",\r\n    transition: \"all ease-in-out 500ms\",\r\n  };\r\n  const dropdown__bottom = {\r\n    display: dropdownToggle ? \"none\" : \"flex\",\r\n    transition: \"all ease-in-out 500ms\",\r\n  };\r\n\r\n  //This code runs once when the code is loaded and not again after\r\n  useEffect(() => {\r\n    const getTotalsWorldwide = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/all\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setCountryInfo(data);\r\n        });\r\n    };\r\n    getTotalsWorldwide();\r\n  }, []);\r\n\r\n  //This code runs once when the code is loaded and not again after\r\n  useEffect(() => {\r\n    const getCountries = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country, //United States, Algeria, United Kingdom\r\n            value: country.countryInfo.iso2, //US, DZ, UK\r\n            id: country.countryInfo._id,\r\n          }));\r\n\r\n          const sortedData = sortData(data);\r\n          setTableData(sortedData);\r\n          setMapCountries(data);\r\n          setCountries(countries);\r\n        });\r\n    };\r\n    getCountries();\r\n  }, []);\r\n\r\n  const onCountryChange = async (e) => {\r\n    e.preventDefault();\r\n    let countryCode = e.target.value;\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountry(countryCode);\r\n        setCountryInfo(data);\r\n        if (countryCode !== \"worldwide\"){\r\n          setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n        setMapZoom(4);}\r\n        else{\r\n          setMapZoom(2);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Navbar\r\n        resetSidebarVisibility={resetSidebarVisibility}\r\n        sidebarVisible={sidebarVisible}\r\n        updateSidebarVisibility={updateSidebarVisibility}\r\n        screenBreakpoint={screenBreakpoint}\r\n        toggleLinks={toggleLinks}\r\n        dropdownToggle={dropdown__top}\r\n      />\r\n\r\n      <div className=\"app__stats\">\r\n        <div id=\"map\" className=\"map\">\r\n          <Map\r\n            countries={mapCountries}\r\n            center={mapCenter}\r\n            zoom={mapZoom}\r\n            casesType={casesType}\r\n          />\r\n        </div>\r\n        <div\r\n          id=\"dropdown__bottom\"\r\n          className=\"dropdown\"\r\n          style={dropdown__bottom}\r\n        >\r\n          {/* <h1>dropdown</h1> */}\r\n          <FormControl className=\"form__dropdown\">\r\n            <Select\r\n              variant=\"outlined\"\r\n              value={country}\r\n              onChange={onCountryChange}\r\n            >\r\n              <MenuItem key=\"0\" value=\"worldwide\">\r\n                <span>Worldwide</span>\r\n              </MenuItem>\r\n              {\r\n                /* loop through all countries and display each as an option */\r\n                countries.map((country) => {\r\n                  return (\r\n                    <MenuItem key={country.id} value={country.value}>\r\n                      {country.name}\r\n                    </MenuItem>\r\n                  );\r\n                })\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <TextSlider />\r\n        <div className=\"app__stats__content\">\r\n          <div className=\"app__left\">\r\n            <div className=\"app__left__stats\">\r\n              <Stats\r\n                casesType={casesType}\r\n                setCasesType={setCasesType}\r\n                countryInfo={countryInfo}\r\n              />\r\n            </div>\r\n            <div id=\"graph\" className=\"app__left__graph\">\r\n              <Graph\r\n                casesType={casesType}\r\n                setCasesType={setCasesType}\r\n                countryInfo={countryInfo}\r\n                country={country}\r\n              />\r\n            </div>\r\n            <div id=\"table\" className=\"app__left__table\">\r\n              <Table casesType={casesType} countries={tableData} />\r\n            </div>\r\n          </div>\r\n          <div className=\"app__right\">\r\n            <Continent\r\n              continent=\"Africa\"\r\n              title=\"(SARS-COV-2) IN AFRICA\"\r\n              imageUrl={africaImage}\r\n            />\r\n            <Continent\r\n              continent=\"north%20america\"\r\n              title=\"(SARS-COV-2) IN NORTH AMERICA\"\r\n              imageUrl={northAmericaImage}\r\n            />\r\n            <Continent\r\n              continent=\"Europe\"\r\n              title=\"(SARS-COV-2) IN EUROPE\"\r\n              imageUrl={europeImage}\r\n            />\r\n            <Continent\r\n              continent=\"Asia\"\r\n              title=\"(SARS-COV-2) IN ASIA\"\r\n              imageUrl={asiaImage}\r\n            />\r\n            <Continent\r\n              continent=\"south%20america\"\r\n              title=\"(SARS-COV-2) IN SOUTH AMERICA\"\r\n              imageUrl={southAmericaImage}\r\n            />\r\n            <Continent\r\n              continent=\"australia%2Foceania\"\r\n              title=\"(SARS-COV-2) IN AUSTRALIA/OCEANIA\"\r\n              imageUrl={australiaImage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"dictionary\" className=\"app__bottom\">\r\n        <div className=\"info__resources\">\r\n          <div style={{width: '80vw', margin:'auto', padding:'20px 0'}}><h2 style={{fontWeight: '400', lineHeight: '1.33', fontSize:'1.5rem'}}>Useful Resources</h2></div>\r\n          <Resources />\r\n        </div>\r\n        <div id=\"about\" className=\"about\">\r\n          <About />\r\n        </div>\r\n        <div className=\"footer\">\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n      <ScrollTop />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tapp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"links\":\"Links_links__2u9q0\",\"list__item\":\"Links_list__item__jR-rR\",\"navLink__icon\":\"Links_navLink__icon__GThps\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__about\":\"About_app__about__3Y61S\",\"about__dictionary\":\"About_about__dictionary__1fa1S\",\"link__icon\":\"About_link__icon__ALQac\",\"rotation\":\"About_rotation__3t1CR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBox\":\"InfoBox_infoBox__3w6Gz\",\"infoBox__title\":\"InfoBox_infoBox__title__2UmNT\",\"infoBox__total\":\"InfoBox_infoBox__total__2gOWu\",\"infoBox__cases\":\"InfoBox_infoBox__cases__3OuKR\",\"MuiPaper-rounded\":\"InfoBox_MuiPaper-rounded__2mVkk\",\"MuiCardContent-root\":\"InfoBox_MuiCardContent-root__1NIDA\",\"border__red\":\"InfoBox_border__red__3tHMc\",\"border__green\":\"InfoBox_border__green__2YRti\",\"border__blue\":\"InfoBox_border__blue__3OkdY\",\"red\":\"InfoBox_red__dY1Ox\",\"blue\":\"InfoBox_blue__2QXPh\",\"green\":\"InfoBox_green__3aZ76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"continent\":\"Continents_continent__17k0K\",\"continent__image\":\"Continents_continent__image__2zSEN\",\"continent__graph__toggler\":\"Continents_continent__graph__toggler__1PpqA\",\"continent__graph__btn\":\"Continents_continent__graph__btn__3TCh_\",\"continent__graphs__container\":\"Continents_continent__graphs__container__1fIgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__DPlLG\",\"table__outer__container\":\"Table_table__outer__container__3_mwf\",\"table__inner__container\":\"Table_table__inner__container__1Lr4O\",\"flag\":\"Table_flag__et7OD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineGraphButton\":\"LineGraphButton_lineGraphButton__gKRzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resources__wrapper\":\"Resources_resources__wrapper__2se7Z\",\"resource\":\"Resources_resource__2R27J\",\"resource__overlap\":\"Resources_resource__overlap__22xDO\",\"resource__overlap__content\":\"Resources_resource__overlap__content__2BwXK\",\"resource__overlap__icon\":\"Resources_resource__overlap__icon__3dCAg\",\"close__icon\":\"Resources_close__icon__1rSIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1BuR4\",\"footer__list\":\"Footer_footer__list__QmGkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu__container\":\"SidebarMenu_menu__container__NZlvz\",\"menu__wrapper\":\"SidebarMenu_menu__wrapper__3Snv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__1jqZA\",\"app__left__stats_wrapper\":\"Stats_app__left__stats_wrapper__1FAgW\"};"],"sourceRoot":""}